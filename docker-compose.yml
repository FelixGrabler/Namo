services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: namo_dev
      POSTGRES_PASSWORD_FILE: /run/secrets/dev_postgres_password
      POSTGRES_DB: namo_dev
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    secrets:
      - dev_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "namo_dev", "-d", "namo_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: app/backend/Dockerfile
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/backend/logs
    environment:
      # Environment
      ENVIRONMENT: development

      # Database
      POSTGRES_USER: namo_dev
      POSTGRES_DB: namo_dev
      DATABASE_HOST: db

      # FastAPI Configuration
      DEBUG: "true"
      RELOAD: "true"
      LOG_LEVEL: "debug"

      # JWT Configuration
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "10080"

      # CORS Configuration (comment out for local testing)
      # CORS_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000"

      # Logging Configuration
      LOG_MAX_SIZE_MB: "10"
      LOG_BACKUP_COUNT: "3"
      LOG_CONSOLE: "true"
    secrets:
      - dev_postgres_password
      - dev_secret_key
      - dev_telegram_bot_token
      - dev_telegram_chat_id
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: app/frontend/Dockerfile
    container_name: web
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    environment:
      VITE_API_URL: "http://localhost:8000"
      VITE_ENVIRONMENT: "development"
      VITE_APP_NAME: "Namo Dev"

secrets:
  dev_postgres_password:
    file: ./secrets/dev_postgres_password.txt
  dev_secret_key:
    file: ./secrets/dev_secret_key.txt
  dev_telegram_bot_token:
    file: ./secrets/telegram_bot_token.txt
  dev_telegram_chat_id:
    file: ./secrets/dev_telegram_chat_id.txt

volumes:
  db-data:

networks:
  grabler-network:
    external: true
