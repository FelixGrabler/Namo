apiVersion: v1
kind: Namespace
metadata:
  name: felix-namo
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: namo-lets-encrypt
spec:
  acme:
    email: felix.grabler02@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: namo-lets-encrypt
    solvers:
      - http01:
          ingress:
            class: public
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: felix-namo
data:
  ENVIRONMENT: "production"
  DATABASE_HOST: "postgres-service"
  POSTGRES_USER: "namo_prod"
  POSTGRES_DB: "namo_prod"
  DEBUG: "false"
  RELOAD: "false"
  LOG_LEVEL: "info"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: felix-namo
data:
  VITE_API_URL: "https://api.grabler.me"
  VITE_ENVIRONMENT: "production"
  VITE_APP_NAME: "Namo"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: namo-postgres-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /mnt/data/namo-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: felix-namo
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: felix-namo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "namo_prod"
            - name: POSTGRES_DB
              value: "namo_prod"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: namo-secrets
                  key: postgres-password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: felix-namo
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: felix-namo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/felixgrabler/namo/backend:latest
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: backend-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: namo-secrets
                  key: postgres-password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: namo-secrets
                  key: secret-key
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: felix-namo
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: felix-namo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/felixgrabler/namo/frontend:latest
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: frontend-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: felix-namo
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: namo-ingress
  namespace: felix-namo
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "namo-lets-encrypt"
spec:
  ingressClassName: public
  tls:
    - hosts:
        - grabler.me
        - api.grabler.me
      secretName: namo-tls-secret
  rules:
    - host: grabler.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
    - host: api.grabler.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000
